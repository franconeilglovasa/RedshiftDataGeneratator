<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Display with Coordinates</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        #image-container {
            position: relative;
        }

            #image-container img {
                display: block;
                width: 100%; /* Ensure the image fits the container */
            }
    </style>
</head>
<body ng-app="app-redshift-data" ng-controller="redshiftDataController as vm">
    <div class="container mt-4">
        <!-- Image Display Row -->
        <div class="row">
            <div class="col-md-12">
                <div id="image-container">
                    <img ng-src="{{vm.image}}" alt="Captured Image" class="img-fluid" ng-if="vm.image" ng-mousemove="vm.trackMouse($event)" />
                    <p ng-if="!vm.image">Loading image...</p>
                    <p ng-if="vm.errorMessage">{{ vm.errorMessage }}</p>
                </div>
            </div>
        </div>

        <!-- Textbox for Mouse Coordinates -->
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="textInput">Coordinates (Mouse Move):</label>
                    <input type="text" id="textInput" class="form-control" ng-model="vm.textInput" readonly />
                </div>
            </div>
        </div>

        <!-- New Textbox for Spacebar Press -->
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="spacebarInput">Coordinates (Spacebar Press):</label>
                    <input type="text" id="spacebarInput" class="form-control" ng-model="vm.spacebarInput" readonly />
                    <label for="spacebarInput">Commands:</label>
                    <input type="text" id="spacebarInput" class="form-control" ng-model="vm.commands"  />
                    <label for="spacebarInput">Keypress:</label>
                    <input type="text" id="spacebarInput" class="form-control" ng-model="vm.keypress"  />
                    <label for="spacebarInput">Alt Tab Mins:</label>
                    <input type="text" id="spacebarInput" class="form-control" ng-model="vm.alttabMins"  />
                </div>
            </div>
        </div>

        <!-- Textbox and Buttons Row -->
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" ng-click="vm.button1Action()">Move Mouse Pointer</button>
                    <button type="button" class="btn btn-secondary" ng-click="vm.button2Action()">Commands</button>
                    <button type="button" class="btn btn-success" ng-click="vm.button3Action()">Move and Mouse Click</button>
                    <button type="button" class="btn btn-primary" ng-click="vm.button4Action()">ExecuteKeys</button>
                    <button type="button" class="btn btn-primary" ng-click="vm.startAltTab(vm.alttabMins)">start Alt tabs</button>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
        <script>
            angular.module("app-redshift-data", ['ngSanitize', 'ngAnimate', 'ngTouch'])
                .controller("redshiftDataController", function ($http, $timeout, $window, $scope) {
                    var vm = this;

                    vm.image = '';
                    vm.errorMessage = '';
                    vm.textInput = '';
                    vm.spacebarInput = '';
                    vm.screenX;
                    vm.screenY;

                    vm.commands;
                    vm.keypress;

                    vm.alttabMins = 2;

   
                    vm.getCaptureImage = function () {
                        $http.get('api/data/GetRedshiftData')
                            .then(function (response) {
                                vm.image = 'data:image/jpeg;base64,' + response.data;
                            })
                            .catch(function (error) {
                                console.error('Error fetching image:', error);
                                vm.errorMessage = 'Failed to load image. Please try again later.';
                            });
                    };

                    vm.getCaptureImage();

                    vm.trackMouse = function (event) {
                        var image = event.target;
                        var rect = image.getBoundingClientRect();

                        var x = event.clientX - rect.left;
                        var y = event.clientY - rect.top;

                        vm.screenX = event.clientX;
                        vm.screenY = event.clientY;

                        vm.textInput = `Image X: ${x}, Y: ${y} | Screen X: ${vm.screenX}, Y: ${vm.screenY}`;


                        $timeout(function () {
                            $scope.$apply();
                        });
                    };

                    vm.button1Action = function () {

                        console.log("screenx", vm.screenX);
                        console.log("screenY", vm.screenY);
                        $http.put('api/data/putredshiftsched', { x: vm.screenX, y: vm.screenY })
                            .then(function (response) {
                                console.log("Action Clicked", response.data);
                            })
                            .catch(function (error) {
                                console.error('Error:', error);
                                vm.errorMessage = 'Failed to perform action. Please try again later.';
                            });
                    };

                    vm.button2Action = function () {
                        console.log('Button 2 clicked');
                    };

                    vm.button4Action = function() {

                    }

                    vm.button3Action = function () {
                        console.log('Button 3 clicked');
                        console.log("screenx", vm.screenX);
                        console.log("screenY", vm.screenY);
                        $http.put('api/data/MoveAndClick', { x: vm.screenX, y: vm.screenY })
                            .then(function (response) {
                                console.log("Action Clicked", response.data);
                            })
                            .catch(function (error) {
                                console.error('Error:', error);
                                vm.errorMessage = 'Failed to perform action. Please try again later.';
                            });
                    };

                    vm.startAltTab = function (minutes) {
                        $http.put('api/data/AltTab?minutes=' + minutes)
                            .then(function (response) {
                                console.log(response.data);
                            })
                            .catch(function (error) {
                                console.error('Error:', error);
                                vm.errorMessage = 'Failed to perform Alt+Tab action. Please try again later.';
                            });
                    };



                    angular.element($window).on('keydown', function (event) {
                        if (event.key === ' ') {
                            event.preventDefault();


                            vm.spacebarInput = vm.textInput;
                            $timeout(function () {
                                $scope.$apply();
                            });
                        }
                    });

                    angular.element($window).on('click', function (event) {
                        vm.spacebarInput = vm.textInput;
                        $timeout(function () {
                            $scope.$apply();
                        });
                    });

                    angular.element($window).on('touchstart', function (event) {
                        vm.spacebarInput = vm.textInput;
                        $timeout(function () {
                            $scope.$apply();
                        });
                    });

                });
        </script>
    }
</body>
</html>
